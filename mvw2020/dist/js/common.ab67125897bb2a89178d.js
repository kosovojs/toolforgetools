(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(t,e,n){"use strict";n.r(e);n(3),n(4);var o=n(1),r=n.n(o),a=(n(5),function(t,e,n){r()({text:t,duration:n,newWindow:!0,close:!0,gravity:"bottom",position:"right",backgroundColor:"error"===e?"#f8d7da":"#d4edda",stopOnFocus:!0,onClick:function(){}}).showToast()}),i=function(){var t=document.getElementById("username"),e=document.getElementById("login"),n=document.getElementById("auth-notification");fetch("".concat("https://edgars.toolforge.org/api.php","?action=userinfo")).then(function(t){return t.json()}).then(function(o){if("error"in o)t.innerHTML="",n.innerHTML='<div class="alert alert-danger" role="alert">Lai nobalsotu, ir nepieciešams <a href="https://edgars.toolforge.org/?action=authorize" target="_parent">autorizēties</a>!</div>',e.innerHTML='<a href="https://edgars.toolforge.org/?action=authorize" target="_parent">ienākt</a>';else{var r=o.query.userinfo.name;t.innerHTML="Sveiks, ".concat(r,"!"),e.innerHTML='<a href="https://edgars.toolforge.org/?action=logout" target="_parent">iziet</a>'}}).catch(function(t){a("Nevar nolasīt autentifikācijas statusu","error",5e3)})};n.d(e,"handleVoteSave",function(){return l}),n.d(e,"updateUserCount",function(){return d}),n.d(e,"voteButtonElement",function(){return s}),n.d(e,"votingButtons",function(){return c});var c=document.getElementsByClassName("votingCheckbox"),u=document.getElementById("currentUserCount"),s=document.getElementById("voteButton"),d=function(t){var e=document.querySelectorAll("input[type=checkbox]:checked").length;u.innerHTML="Pašlaik izvēlētais dalībnieku skaits: ".concat(e),u.classList.toggle("warning",e>t),e>t||0==e?s.setAttribute("disabled",""):s.hasAttribute("disabled")&&s.removeAttribute("disabled")},l=function(t){var e=document.querySelectorAll("input[type=checkbox]:checked"),n=[];Array.from(e).forEach(function(t){n.push(t.getAttribute("data-user"))}),fetch("https://edgars.toolforge.org/mvw2020/api/index.php",{method:"post",body:JSON.stringify({vote:t,users:n})}).then(function(t){return t.json()}).then(function(t){"error"===t.status?a("Notika kļūda: ".concat(t.msg),"error",5e3):a("Paldies, balsojums pieņemts!","ok",2500)}).catch(function(t){a("Notika kļūda: ".concat(t),"error",5e3)})};window.addEventListener("load",function(){Array.from(c).forEach(function(t){"checkbox"===t.type&&(t.checked=!1)}),i()})},,,function(t,e,n){}]]);